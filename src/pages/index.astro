---
import { getCollection } from "astro:content";
import { Image } from "astro:assets"

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import ArticleCard from "@/components/ArticleCard.astro";
import TalkCard from "@/components/TalkCard.astro";
import Link from "@/components/Link.astro";
import Testimonials from "@components/Testimonials.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";
import { site, articles, talks } from "@/consts"

const articleList = (await getCollection("articles")).sort(function (first, second) {
  return second.data.publishedAt.getTime() - first.data.publishedAt.getTime();
});

const talkList = (await getCollection("talks"));
---

<Layout>
  <main class="flex flex-col gap-20">
    <article
      class="flex flex-col gap-8 md:flex-row-reverse md:justify-between md:gap-12"
    >
      {
        site.profile && (
          <Image
            src={site.profile}
            class="w-1/4 self-center rounded-full"
            alt="Avatar of JustSteveKing"
            width="200"
            height="200"
          />
        )
      }

      <div class="flex flex-col gap-8">
        <h1 class="text-3xl">
          {site.title}
        </h1>

        <h2
          class="w-auto max-w-[60ch] leading-6"
          set:html={convertAsteriskToStrongTag(site.description)}
        />

        <SocialLinks />
      </div>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <div class="">
          <h3 class="text-xl">
            {articles.title}
          </h3>
          <p class="mt-2 text-md leading-8 max-w-[60ch]">
            {articles.description}
          </p>
        </div>

        <Link href="/articles" label="See all articles" isUnderline target="_self" />
      </header>

      <section class="grid grid-cols-1 md:grid-cols-2">
        {
          articleList.slice(0, 4).map((article) => (
            <ArticleCard
              publishedAt={article.data.publishedAt}
              title={article.data.title}
              description={article.data.description}
              slug={article.slug}
            />
          ))
        }
      </section>
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg">Latest talks</h3>
        <Link href="/talks" label="See all talks" isUnderline target="_self" />
      </header>
      {talkList.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

      <section class="grid grid-cols-1 md:grid-cols-2">
        {
          talkList.slice(0, 3).map((talk) => (
            <TalkCard
              publishedAt={talk.data.publishedAt}
              title={talk.data.title}
              description={talk.data.description}
              slug={talk.slug}
            />
          ))
        }
      </section>
    </article>

    <Testimonials />
    

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg">Get in touch</h3>
      </header>
      <p>
        Email me at <Link
          href={`mailto:${site.email}`}
          label={site.email}
        /> or follow me via my social links.
      </p>

      <SocialLinks />
    </article>
  </main>
</Layout>
